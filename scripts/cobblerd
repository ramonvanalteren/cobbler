#!/usr/bin/python

"""
Wrapper for cobbler's remote syslog watching daemon.

Copyright 2006, Red Hat, Inc
Michael DeHaan <mdehaan@redhat.com>

This software may be freely redistributed under the terms of the GNU
general public license.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
"""

import sys
import os
import cobbler.api as bootapi
import cobbler.cobblerd as app
import logging
import cobbler.utils as utils

#logger = logging.getLogger("cobbler.cobblerd")
#logger.setLevel(logging.DEBUG)
#ch = logging.FileHandler("/var/log/cobbler/cobblerd.log")
#ch.setLevel(logging.DEBUG)
#formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
#ch.setFormatter(formatter)
#logger.addHandler(ch)

api = bootapi.BootAPI()
logger = api.logger

if __name__ == "__main__":

    #############################################

    # daemonizing code:  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66012
    logger.info("cobblerd started")
    try: 
        pid = os.fork() 
        if pid > 0:
            # exit first parent
            sys.exit(0) 
    except OSError, e: 
        print >>sys.stderr, "fork #1 failed: %d (%s)" % (e.errno, e.strerror) 
        utils.log_exc(logger)
        sys.exit(1)

    # decouple from parent environment
    os.chdir("/") 
    os.setsid() 
    os.umask(0) 

    # do second fork
    try: 
        pid = os.fork() 
        if pid > 0:
            # print "Daemon PID %d" % pid 
            sys.exit(0) 
    except OSError, e: 
        print >>sys.stderr, "fork #2 failed: %d (%s)" % (e.errno, e.strerror) 
        utils.log_exc(logger)
        sys.exit(1) 

    #################

    try:
        app.core(logger=logger)
    except:
        utils.log_exc(logger)

