This patch re-enables Debian support in cobbler. No updates for done for enabling newer versions of Debian.

From: Chuck Short <chuck.short@canonical.com>


---
 cobbler/action_import.py |  197 +++++++++++++++++++++++-----------------------
 1 files changed, 98 insertions(+), 99 deletions(-)

diff --git a/cobbler/action_import.py b/cobbler/action_import.py
index b4ca6a1..2021419 100644
--- a/cobbler/action_import.py
+++ b/cobbler/action_import.py
@@ -123,7 +123,7 @@ class Importer:
 
         #if self.breed and self.breed.lower() not in [ "redhat", "debian", "ubuntu", "windows" ]:
         #if self.breed and self.breed.lower() not in [ "redhat" ]:
-        if self.breed and self.breed.lower() not in [ "redhat", "vmware" ]:
+        if self.breed and self.breed.lower() not in [ "redhat", "debian", "vmware" ]:
             utils.die(self.logger,"Supplied import breed is not supported")
 
         # if --arch is supplied, make sure the user is not importing a path with a different
@@ -873,8 +873,8 @@ def import_factory(kerneldir,path,cli_breed,logger):
     if breed == "vmware":
         return VMwareImporter(logger,rootdir,pkgdir)
     # disabled for 2.0
-    #elif breed == "debian":
-    #    return DebianImporter(logger,rootdir,pkgdir)
+    elif breed == "debian":
+        return DebianImporter(logger,rootdir,pkgdir)
     #elif breed == "ubuntu":
     #    return UbuntuImporter(logger,rootdir,pkgdir)
     elif breed:
@@ -1193,102 +1193,101 @@ class VMwareImporter (BaseImporter):
         """
         pass
 
-#class DebianImporter ( BaseImporter ) :
-#
-#   def __init__(self,logger,rootdir,pkgdir):
-#       self.breed = "debian"
-#       self.ks = "/var/lib/cobbler/kickstarts/sample.seed"
-#       self.rootdir = rootdir
-#       self.pkgdir = pkgdir
-#       self.logger = logger
-#
-#   def get_release_files(self):
-#       if not self.get_pkgdir():
-#           return []
-#       # search for base-files or base-installer ?
-#       return glob.glob(os.path.join(self.get_pkgdir(), "main/b/base-files" , "base-files_*"))
-#
-#   def match_kernelarch_file(self, filename):
-#       if not filename.endswith("deb"):
-#           return False
-#       if filename.startswith("linux-headers-"):
-#           return True
-#       return False
-#
-#   def scan_pkg_filename(self, deb):
-#
-#       deb = os.path.basename(deb)
-#       self.logger.info("processing deb : %s" % deb)
-#
-#       # get all the tokens and try to guess a version
-#       accum = []
-#       tokens = deb.split("_")
-#       tokens2 = tokens[1].split(".")
-#       for t2 in tokens2:
-#          try:
-#              val = int(t2)
-#              accum.append(val)
-#          except:
-#              pass
-#       # Safeguard for non-guessable versions
-#       if not accum:
-#          return None
-#       accum.append(0)
-#
-#       return (None, accum[0], accum[1])
-#
-#   def set_variance(self, flavor, major, minor, arch):
-#
-#       dist_names = { '4.0' : "etch" , '5.0' : "lenny" }
-#       dist_vers = "%s.%s" % ( major , minor )
-#       os_version = dist_names[dist_vers]
-#
-#       return os_version , "/var/lib/cobbler/kickstarts/sample.seed"
-#
-#   def set_install_tree(self, distro, url):
-#       idx = url.find("://")
-#       url = url[idx+3:]
-#
-#       idx = url.find("/")
-#       distro.ks_meta["hostname"] = url[:idx]
-#       distro.ks_meta["directory"] = url[idx:]
-#       if not distro.os_version :
-#           utils.die(self.logger, "OS version is required for debian distros")
-#       distro.ks_meta["suite"] = distro.os_version
-#
-#   def process_repos(self, main_importer, distro):
-#
-#       # Create a disabled repository for the new distro, and the security updates
-#       #
-#       # NOTE : We cannot use ks_meta nor os_version because they get fixed at a later stage
-#
-#       repo = item_repo.Repo(main_importer.config)
-#       repo.set_breed( "apt" )
-#       repo.set_arch( distro.arch )
-#       repo.set_keep_updated( False )
-#       repo.yumopts["--ignore-release-gpg"] = None
-#       repo.yumopts["--verbose"] = None
-#       repo.set_name( distro.name )
-#       repo.set_os_version( distro.os_version )
-#       # NOTE : The location of the mirror should come from timezone
-#       repo.set_mirror( "http://ftp.%s.debian.org/debian/dists/%s" % ( 'us' , '@@suite@@' ) )
-#
-#       security_repo = item_repo.Repo(main_importer.config)
-#       security_repo.set_breed( "apt" )
-#       security_repo.set_arch( distro.arch )
-#       security_repo.set_keep_updated( False )
-#       security_repo.yumopts["--ignore-release-gpg"] = None
-#       security_repo.yumopts["--verbose"] = None
-#       security_repo.set_name( distro.name + "-security" )
-#       security_repo.set_os_version( distro.os_version )
-#       # There are no official mirrors for security updates
-#       security_repo.set_mirror( "http://security.debian.org/debian-security/dists/%s/updates" % '@@suite@@' )
-#
-#       self.logger.info("Added repos for %s" % distro.name)
-#       repos  = main_importer.config.repos()
-#       repos.add(repo,save=True)
-#       repos.add(security_repo,save=True)
-
+class DebianImporter ( BaseImporter ) :
+
+   def __init__(self,logger,rootdir,pkgdir):
+       self.breed = "debian"
+       self.ks = "/var/lib/cobbler/kickstarts/sample.seed"
+       self.rootdir = rootdir
+       self.pkgdir = pkgdir
+       self.logger = logger
+
+   def get_release_files(self):
+       if not self.get_pkgdir():
+           return []
+       # search for base-files or base-installer ?
+       return glob.glob(os.path.join(self.get_pkgdir(), "main/b/base-files" , "base-files_*"))
+
+   def match_kernelarch_file(self, filename):
+       if not filename.endswith("deb"):
+           return False
+       if filename.startswith("linux-headers-"):
+           return True
+       return False
+
+   def scan_pkg_filename(self, deb):
+
+       deb = os.path.basename(deb)
+       self.logger.info("processing deb : %s" % deb)
+
+       # get all the tokens and try to guess a version
+       accum = []
+       tokens = deb.split("_")
+       tokens2 = tokens[1].split(".")
+       for t2 in tokens2:
+          try:
+              val = int(t2)
+              accum.append(val)
+          except:
+              pass
+       # Safeguard for non-guessable versions
+       if not accum:
+          return None
+       accum.append(0)
+
+       return (None, accum[0], accum[1])
+
+   def set_variance(self, flavor, major, minor, arch):
+
+       dist_names = { '4.0' : "etch" , '5.0' : "lenny" }
+       dist_vers = "%s.%s" % ( major , minor )
+       os_version = dist_names[dist_vers]
+
+       return os_version , "/var/lib/cobbler/kickstarts/sample.seed"
+
+   def set_install_tree(self, distro, url):
+       idx = url.find("://")
+       url = url[idx+3:]
+
+       idx = url.find("/")
+       distro.ks_meta["hostname"] = url[:idx]
+       distro.ks_meta["directory"] = url[idx:]
+       if not distro.os_version :
+           utils.die(self.logger, "OS version is required for debian distros")
+       distro.ks_meta["suite"] = distro.os_version
+
+   def process_repos(self, main_importer, distro):
+
+       # Create a disabled repository for the new distro, and the security updates
+       #
+       # NOTE : We cannot use ks_meta nor os_version because they get fixed at a later stage
+
+       repo = item_repo.Repo(main_importer.config)
+       repo.set_breed( "apt" )
+       repo.set_arch( distro.arch )
+       repo.set_keep_updated( False )
+       repo.yumopts["--ignore-release-gpg"] = None
+       repo.yumopts["--verbose"] = None
+       repo.set_name( distro.name )
+       repo.set_os_version( distro.os_version )
+       # NOTE : The location of the mirror should come from timezone
+       repo.set_mirror( "http://ftp.%s.debian.org/debian/dists/%s" % ( 'us' , '@@suite@@' ) )
+
+       security_repo = item_repo.Repo(main_importer.config)
+       security_repo.set_breed( "apt" )
+       security_repo.set_arch( distro.arch )
+       security_repo.set_keep_updated( False )
+       security_repo.yumopts["--ignore-release-gpg"] = None
+       security_repo.yumopts["--verbose"] = None
+       security_repo.set_name( distro.name + "-security" )
+       security_repo.set_os_version( distro.os_version )
+       # There are no official mirrors for security updates
+       security_repo.set_mirror( "http://security.debian.org/debian-security/dists/%s/updates" % '@@suite@@' )
+
+       self.logger.info("Added repos for %s" % distro.name)
+       repos  = main_importer.config.repos()
+       repos.add(repo,save=True)
+       repos.add(security_repo,save=True)
 
 #class UbuntuImporter ( DebianImporter ) :
 #
